/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tema5_czakozoltan_grupa30225;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Zoli
 */
public class DictionaryControlPanel extends javax.swing.JFrame {

    /**
     * Creates new form DictionaryControlPanel
     */
    
    private DefaultListModel list;
    private Dictionary dictionary;
    
    public DictionaryControlPanel() {
        this.list =  new DefaultListModel();
        this.dictionary = new Dictionary();
        this.dictionary.initDictionary("words.txt");
        initComponents();
        this.setLocationRelativeTo(null);
        showDictionary();
    }
    
    public void showDictionary()
    {
        this.WordList.setModel(this.dictionary.showDictionary());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        WordText = new javax.swing.JTextField();
        MeaningText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        WordList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        RemoveButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        SimpleAddButton = new javax.swing.JButton();
        ConsistentAddButtton = new javax.swing.JButton();
        CheckButton = new javax.swing.JButton();
        DictionaryCheckButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dictionary ControlPanel");
        setMinimumSize(new java.awt.Dimension(324, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(WordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 88, -1));
        getContentPane().add(MeaningText, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 100, -1));

        jScrollPane1.setViewportView(WordList);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 153, 157, -1));

        jLabel1.setText("Word:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jLabel2.setText("Meaning:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, -1));

        RemoveButton.setText("Remove");
        RemoveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RemoveButtonMouseClicked(evt);
            }
        });
        getContentPane().add(RemoveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Words in dictionary");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 125, -1, -1));

        SimpleAddButton.setText("Simple Add");
        SimpleAddButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SimpleAddButtonMouseClicked(evt);
            }
        });
        getContentPane().add(SimpleAddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 62, 105, -1));

        ConsistentAddButtton.setText("Consistent Add");
        ConsistentAddButtton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConsistentAddButttonMouseClicked(evt);
            }
        });
        getContentPane().add(ConsistentAddButtton, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 62, -1, -1));

        CheckButton.setText("Consistency Check");
        CheckButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CheckButtonMouseClicked(evt);
            }
        });
        getContentPane().add(CheckButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        DictionaryCheckButton.setText("Dictionary Check");
        DictionaryCheckButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DictionaryCheckButtonMouseClicked(evt);
            }
        });
        getContentPane().add(DictionaryCheckButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SimpleAddButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SimpleAddButtonMouseClicked
        String ENWord,ROWord;
        
        ENWord = this.WordText.getText();
        ENWord = ENWord.trim();
        ROWord = this.MeaningText.getText();
        ROWord = ROWord.trim();
        
        try
        {
            BussinesLogic.verifyTextField(ROWord);
            BussinesLogic.verifyTextField(ENWord);
        }catch(EmptyStringException ex)
        {
            JOptionPane.showMessageDialog(null,ex.getMessage() +  " Please fill the empty textfield(s)!",
					  "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.dictionary.simpleAddWord(ENWord, ROWord);
        showDictionary();
    }//GEN-LAST:event_SimpleAddButtonMouseClicked

    private void ConsistentAddButttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConsistentAddButttonMouseClicked
        String ENWord,ROWord;
        
        ENWord = this.WordText.getText();
        ENWord = ENWord.trim();
        ROWord = this.MeaningText.getText();
        ROWord = ROWord.trim();
        
        try
        {
            BussinesLogic.verifyTextField(ROWord);
            BussinesLogic.verifyTextField(ENWord);
        }catch(EmptyStringException ex)
        {
            JOptionPane.showMessageDialog(null,ex.getMessage() +  " Please fill the empty textfield(s)!",
					  "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.dictionary.addWord(ENWord, ROWord);
        showDictionary();
    }//GEN-LAST:event_ConsistentAddButttonMouseClicked

    private void CheckButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckButtonMouseClicked
        boolean consistent;
        
        String ENWord,ROWord;
        
        ROWord = this.WordText.getText();
        ROWord = ROWord.trim();
        ENWord = this.MeaningText.getText();
        ENWord = ENWord.trim();
        
        try
        {
            BussinesLogic.verifyTextField(ROWord);
            BussinesLogic.verifyTextField(ENWord);
        }catch(EmptyStringException ex)
        {
            JOptionPane.showMessageDialog(null,ex.getMessage() +  " Please fill the empty textfield(s)!",
					  "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        consistent =  this.dictionary.checkConsistency(ENWord, ROWord);
        
        if(consistent)
        {
            JOptionPane.showMessageDialog(null, "The dictionary is consistent for these words!",
					  "Success", JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "The dictionary is NOT consistent for these words!",
					  "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CheckButtonMouseClicked

    private void RemoveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveButtonMouseClicked
        
        String word = (String)this.WordList.getSelectedValue();
        
        String tokens[] = word.split(" ");
        //this.list.removeElement(tokens[0]);
        this.dictionary.removeWord(tokens[0], tokens[2]);
        showDictionary();
    }//GEN-LAST:event_RemoveButtonMouseClicked

    private void DictionaryCheckButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DictionaryCheckButtonMouseClicked
        boolean consistent = this.dictionary.checkWholeConsistency();
        if(consistent)
        {
            JOptionPane.showMessageDialog(null, "The dictionary is consistent!",
					  "Success", JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "The dictionary is NOT consistent!",
					  "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DictionaryCheckButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DictionaryControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DictionaryControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DictionaryControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictionaryControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DictionaryControlPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckButton;
    private javax.swing.JButton ConsistentAddButtton;
    private javax.swing.JButton DictionaryCheckButton;
    private javax.swing.JTextField MeaningText;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JButton SimpleAddButton;
    private javax.swing.JList WordList;
    private javax.swing.JTextField WordText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
